State 0:
          start ::= * program
          program ::= * HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                    HEX_NUMBER shift        16     
                         start accept
                       program shift        17     

State 1:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET * CLOSE_BRACKET

                 CLOSE_BRACKET shift-reduce 1      program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

State 2:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET * CLOSE_BRACKET CLOSE_BRACKET

                 CLOSE_BRACKET shift        1      

State 3:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL * CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                 CLOSE_BRACKET shift        2      

State 4:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET * ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                   ASM_LITERAL shift        3      

State 5:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM * OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                  OPEN_BRACKET shift        4      

State 6:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET * ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                           ASM shift        5      

State 7:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN * OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                  OPEN_BRACKET shift        6      

State 8:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN * CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                   CLOSE_PAREN shift        7      

State 9:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER * OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                    OPEN_PAREN shift        8      

State 10:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER * IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                    IDENTIFIER shift        9      

State 11:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB * IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                    IDENTIFIER shift        10     

State 12:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET * SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                           SUB shift        11     

State 13:
          program ::= HEX_NUMBER COLON HEX_NUMBER STRING * OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                  OPEN_BRACKET shift        12     

State 14:
          program ::= HEX_NUMBER COLON HEX_NUMBER * STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                        STRING shift        13     

State 15:
          program ::= HEX_NUMBER COLON * HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                    HEX_NUMBER shift        14     

State 16:
          program ::= HEX_NUMBER * COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET

                         COLON shift        15     

State 17:
      (0) start ::= program *

                             $ reduce       0      start ::= program

----------------------------------------------------
Symbols:
The first-set of non-terminals is shown after the name.

    0: $:
    1: HEX_NUMBER
    2: COLON
    3: STRING
    4: OPEN_BRACKET
    5: CLOSE_BRACKET
    6: IDENTIFIER
    7: SUB
    8: OPEN_PAREN
    9: CLOSE_PAREN
   10: ASM
   11: ASM_LITERAL
   12: start: HEX_NUMBER
   13: program: HEX_NUMBER
----------------------------------------------------
Syntax-only Symbols:
The following symbols never carry semantic content.

$ HEX_NUMBER COLON STRING OPEN_BRACKET CLOSE_BRACKET IDENTIFIER SUB
OPEN_PAREN CLOSE_PAREN ASM ASM_LITERAL start program
----------------------------------------------------
Rules:
   0: start ::= program.
   1: program ::= HEX_NUMBER COLON HEX_NUMBER STRING OPEN_BRACKET SUB IDENTIFIER IDENTIFIER OPEN_PAREN CLOSE_PAREN OPEN_BRACKET ASM OPEN_BRACKET ASM_LITERAL CLOSE_BRACKET CLOSE_BRACKET CLOSE_BRACKET.
